user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format mTLS '$remote_addr - $remote_user [$time_local] "$request" '
                '$status $body_bytes_sent "$http_referer" '
                '"$http_user_agent" "$http_x_forwarded_for" '
                '$ssl_client_s_dn "$ssl_client_verify"';
    access_log /var/log/nginx/mtls_access.log mTLS;

    sendfile on;
    keepalive_timeout 65;

    # Allowed clients map
    map $ssl_client_s_dn $is_allowed_client {
    default 0;
}

    server {
        listen 8083 ssl;
        server_name nginx3;

        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;
        ssl_client_certificate /etc/nginx/ssl/trusted_clients.crt;
        ssl_verify_client on;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256;

        ssl_stapling on;
        ssl_stapling_verify on;

        location / {
            if ($ssl_client_verify != SUCCESS) {
                add_header X-Error-Message "Client certificate verification failed";
                return 401;
            }
            if ($is_allowed_client = 0) {
                add_header X-Error-Message "Client not allowed";
                return 403;
            }

            root /usr/share/nginx/html;
            index index.html index.htm;
            
            add_header X-Client-DN $ssl_client_s_dn;
        }

        location /healthz {
            access_log off;
            add_header Content-Type text/plain;
            return 200 'OK';
        }
    }
}
